name: Update TVBox Spider Value (grep/sed version)

on:
  schedule:
    # 每天凌晨 3 点 (UTC 时间) 运行一次
    - cron: '0 3 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  update-spider:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get New Spider Value
        id: get_new_spider
        run: |
          echo "Fetching new spider data..."
          URL_PARAM=$(jq -rn --arg url "http://www.饭太硬.com/tv" '$url|@uri') # jq 仍然是 URL 编码的好工具
          FULL_URL="https://ua.fongmi.eu.org/box.php?url=${URL_PARAM}"
          echo "Requesting URL: $FULL_URL"

          RAW_RESPONSE=$(curl -fsSL "$FULL_URL")
          CURL_EXIT_CODE=$?
          if [ $CURL_EXIT_CODE -ne 0 ]; then
            echo "::error::Failed to fetch data from URL (curl exit code: $CURL_EXIT_CODE)"
            exit 1
          fi
          
          echo "--- RAW RESPONSE ---"
          echo "$RAW_RESPONSE"
          echo "--- END RAW RESPONSE ---"

          # --- **核心改动：使用 grep 和 sed 提取新值** ---
          # 1. 使用 grep 找到包含 "spider": 的行 (只取第一行匹配，以防万一)
          # 2. 使用 sed 提取双引号之间的值
          #    -n 不打印默认输出
          #    s/.../.../p 查找替换并打印匹配行
          #    [^"]* 匹配双引号以外的任何字符零次或多次
          NEW_SPIDER=$(echo "$RAW_RESPONSE" | grep '"spider":' | head -n 1 | sed -n 's/.*"spider":[[:space:]]*"\([^"]*\)".*/\1/p')
          # --- 改动结束 ---

          if [ -z "$NEW_SPIDER" ]; then
            echo "::error::Failed to extract spider value from fetched response using grep/sed."
            exit 1
          fi

          echo "New spider value fetched successfully: $NEW_SPIDER"
          echo "new_spider_value=$NEW_SPIDER" >> $GITHUB_OUTPUT

      - name: Get Old Spider Value and File Path
        id: get_old_spider
        run: |
          FILE_PATH="test/test/tvbox/laobaitvbox.json" # 确认路径正确
          echo "Reading old spider data from $FILE_PATH..."
          if [ ! -f "$FILE_PATH" ]; then
            echo "::error::File $FILE_PATH not found."
            exit 1
          fi
          
          # --- **核心改动：使用 grep 和 sed 提取旧值** ---
          OLD_SPIDER=$(grep '"spider":' "$FILE_PATH" | head -n 1 | sed -n 's/.*"spider":[[:space:]]*"\([^"]*\)".*/\1/p')
          # --- 改动结束 ---
          
          if [ -z "$OLD_SPIDER" ]; then
             echo "::error::Failed to extract spider value from local file ($FILE_PATH) using grep/sed."
             exit 1
          fi
          
          echo "Old spider value found: $OLD_SPIDER"
          echo "old_spider_value=$OLD_SPIDER" >> $GITHUB_OUTPUT
          echo "file_path=$FILE_PATH" >> $GITHUB_OUTPUT

      - name: Compare and Update File
        id: update_file
        if: steps.get_new_spider.outputs.new_spider_value != steps.get_old_spider.outputs.old_spider_value
        run: |
          echo "Spider value has changed. Updating the file using sed..."
          FILE_PATH="${{ steps.get_old_spider.outputs.file_path }}"
          # 转义新旧值中的特殊字符，为 sed 做准备
          NEW_SPIDER_ESCAPED=$(printf '%s\n' "${{ steps.get_new_spider.outputs.new_spider_value }}" | sed 's:[][\\/.^$*]:\\&:g')
          OLD_SPIDER_ESCAPED=$(printf '%s\n' "${{ steps.get_old_spider.outputs.old_spider_value }}" | sed 's:[][\\/.^$*]:\\&:g')

          # --- **使用 sed 进行原地替换，逻辑不变** ---
          sed -i.bak "s|\(\"spider\":[[:space:]]*\"\)$OLD_SPIDER_ESCAPED\"|\1$NEW_SPIDER_ESCAPED\"|g" "$FILE_PATH"
          if [ $? -ne 0 ]; then
              echo "::error::sed command failed to update the file."
              mv "${FILE_PATH}.bak" "$FILE_PATH" # 恢复备份
              exit 1
          fi
          rm "${FILE_PATH}.bak" # 删除备份
          # --- 替换逻辑结束 ---

          echo "File $FILE_PATH updated successfully using sed."
          echo "changed=true" >> $GITHUB_OUTPUT

      - name: Commit and Push Changes
        if: steps.update_file.outputs.changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Auto-update TVBox spider value"
          file_pattern: ${{ steps.get_old_spider.outputs.file_path }}
          commit_user_name: "GitHub Action Bot"
          commit_user_email: "actions@github.com"
          commit_author: "GitHub Action Bot <actions@github.com>"

      - name: No Changes Needed
        if: steps.get_new_spider.outputs.new_spider_value == steps.get_old_spider.outputs.old_spider_value
        run: echo "Spider value has not changed. No update needed."
