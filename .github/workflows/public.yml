name: Update Public Playlist
on:
  schedule:
    - cron: '0 * * * *'  # 每小时整点执行
  workflow_dispatch:      # 允许手动触发

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Read target URL
      id: target
      run: |
        TARGET_URL=$(cat public/default/target.txt)
        echo "target_url=$TARGET_URL" >> $GITHUB_OUTPUT

    # --- Start of MODIFIED Block ---
    - name: Download, process, and append playlist
      run: |
        # 步骤 1: 使用模拟浏览器的 Headers 下载，执行域名替换，并删除测试频道，最后将结果写入 main.m3u
        curl -sL \
        -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36' \
        -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' \
        -H 'Accept-Language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7' \
        -H 'Connection: keep-alive' \
        -H 'Upgrade-Insecure-Requests: 1' \
        "${{ steps.target.outputs.target_url }}" | \
        sed 's|https://mursor\.ottiptv\.cc|https://test.chinacert.cftest5.cn|g' | \
        sed 's|https://mgtv\.ottiptv\.cc|https://mg.chinacert.cftest5.cn|g' | \
        sed '/测试/{N;d;}' > public/default/main.m3u

        # 步骤 2: 在 main.m3u 文件末尾追加一个空行
        echo "" >> public/default/main.m3u

        # 步骤 3: 将 stream/stream.m3u 的内容追加到 main.m3u 的末尾
        cat stream/stream.m3u >> public/default/main.m3u
    # --- End of MODIFIED Block ---

    - name: Commit changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add public/default/main.m3u
        # 下面的命令只有在文件实际发生变化时才会执行 commit 和 push
        git diff --quiet && git diff --staged --quiet || git commit -m "Auto-update playlist from ${{ steps.target.outputs.target_url }}"
        git push
